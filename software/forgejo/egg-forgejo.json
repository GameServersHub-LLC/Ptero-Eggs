{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2024-02-24T12:52:40+01:00",
    "name": "Forgejo",
    "author": "eggs@goover.dev",
    "description": "Forgejo is a self-hosted lightweight software forge.\r\nEasy to install and low maintenance, it just does the job.\r\n\r\nBrought to you by an inclusive community under the umbrella of Codeberg e.V., a democratic non-profit organization, Forgejo can be trusted to be exclusively Free Software. It includes and cooperates with hundreds of projects (Gitea, Git, ...) and is focused on scaling, federation and privacy.",
    "features": null,
    "docker_images": {
        "ghcr.io\/goover\/debian:12-bookworm": "ghcr.io\/goover\/debian:12-bookworm"
    },
    "file_denylist": [],
    "startup": ".\/forgejo web -p {{SERVER_PORT}} -c .\/custom\/app.ini",
    "config": {
        "files": "{\r\n    \"custom\/app.ini\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"DISABLE_SSH\": \"DISABLE_SSH: {{server.build.env.DISABLE_SSH}}\",\r\n            \"SSH_PORT\": \"SSH_PORT: {{server.build.env.SSH_PORT}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Listen: \"\r\n}",
        "logs": "{}",
        "stop": "^^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# Forgejo Installscript\r\n# (c)2023 by gOOvER - https:\/\/goover.dev\r\n#\r\n\r\nclear\r\nRED='\\033[0;31m'\r\nGREEN='\\033[0;32m'\r\nYELLOW='\\033[1;33m'\r\nBLUE='\\033[0;34m'\r\nNC='\\033[0m'\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}Forgejo Installscript${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}updating system...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\n\r\n## Variables\r\nARCH=$([[ \"$(uname -m)\" == \"x86_64\" ]] && echo \"amd64\" || echo \"arm64\")\r\nLATEST=$(curl -sSL https:\/\/codeberg.org\/api\/v1\/repos\/forgejo\/forgejo\/releases\/latest | jq -r \".tag_name\" | sed -e 's|^v||')\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}Latest Forgejo Version: ${GREEN} ${LATEST} ${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\ncd \/mnt\/server\r\n\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${YELLOW}Download url: https:\/\/codeberg.org\/forgejo\/forgejo\/releases\/download\/v${LATEST}\/forgejo-${LATEST}-linux-${ARCH} ${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\nrm -f forgejo\r\n\r\nif [ -z \"${VERSION}\" ] || [ \"${VERSION}\" == \"latest\" ]; then\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    echo -e \"${YELLOW}downloading Forgejo $LATEST ${NC}\"\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    curl -sSL -o forgejo https:\/\/codeberg.org\/forgejo\/forgejo\/releases\/download\/v${LATEST}\/forgejo-${LATEST}-linux-${ARCH}\r\nelse\r\n    curl -sSL -o forgejo https:\/\/codeberg.org\/forgejo\/forgejo\/releases\/download\/v$VERSION\/forgejo-$VERSION-linux-${ARCH}\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    echo -e \"${YELLOW}downloading Forgejo $VERSION ${NC}\"\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\nfi\r\n\r\nchmod +x forgejo\r\n\r\nmkdir -p custom\r\n\r\nif [ -f \"\/mnt\/server\/custom\/app.ini\" ]; then\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n    echo -e \"${YELLOW}config file exists${NC}\"\r\n    echo -e \"${BLUE}-------------------------------------------------${NC}\"\r\n\r\nelse\r\n    echo \"[server]\r\n    LOCAL_ROOT_URL = http:\/\/${SERVER_IP}:${SERVER_PORT}\/\r\n    DOMAIN           = ${SERVER_IP}\r\n    HTTP_PORT        = ${SERVER_PORT}\r\n    ROOT_URL         = http:\/\/${SERVER_IP}:${SERVER_PORT}\/\r\n    DISABLE_SSH      = ${DISABLE_SSH}\r\n    SSH_PORT         = ${SSH_PORT}\" > \/mnt\/server\/custom\/app.ini\r\nfi\r\n\r\n## install end\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"\r\necho -e \"${GREEN}Installation completed...${NC}\"\r\necho -e \"${BLUE}-------------------------------------------------${NC}\"",
            "container": "ghcr.io\/goover\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Disable SSH",
            "description": "Disable SSH feature when it\u2019s not available",
            "env_variable": "DISABLE_SSH",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|string|in:true,false",
            "field_type": "text"
        },
        {
            "name": "SSH Port",
            "description": "SSH port displayed in clone URL.",
            "env_variable": "SSH_PORT",
            "default_value": "2020",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|integer|between:1024,65535",
            "field_type": "text"
        },
        {
            "name": "Version",
            "description": "you can use latest, nightly or version (e.g. 1.18.1)",
            "env_variable": "VERSION",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        }
    ]
}
